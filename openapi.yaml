openapi: 3.0.3
info:
  title: API de Gestão de Alunos e Produtos
  description: API para gerenciar alunos e produtos, incluindo CRUD e filtros avançados.
  version: 1.0.0

servers:
  - url: /v1
    description: Servidor de Desenvolvimento

paths:
  /alunos:
    get:
      summary: Listar todos os alunos
      description: Retorna a lista de alunos cadastrados com filtros opcionais.
      operationId: getAlunos
      parameters:
        - name: idade
          in: query
          description: Idade dos alunos.
          schema:
            type: integer
        - name: nome
          in: query
          description: Nome dos alunos.
          schema:
            type: string
        - name: status
          in: query
          description: Status dos alunos.
          schema:
            type: string
            enum: [ATIVO, INATIVO, SUSPENSO]
            default: ATIVO
      responses:
        '200':
          description: Lista de alunos retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluno'
    post:
      summary: Criar novo aluno
      description: Cria um novo aluno com as informações fornecidas.
      operationId: createAluno
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlunoCreate'
      responses:
        '201':
          description: Aluno criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'

  /alunos/{id}:
    get:
      summary: Buscar aluno por ID
      description: Retorna as informações do aluno com base no ID fornecido.
      operationId: getAlunoById
      parameters:
        - name: id
          in: path
          required: true
          description: ID do aluno.
          schema:
            type: integer
      responses:
        '200':
          description: Aluno encontrado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'
        '404':
          description: Aluno não encontrado.
    put:
      summary: Atualizar aluno
      description: Atualiza as informações de um aluno existente.
      operationId: updateAluno
      parameters:
        - name: id
          in: path
          required: true
          description: ID do aluno a ser atualizado.
          schema:
            type: integer
      responses:
        '200':
          description: Aluno atualizado com sucesso.
    delete:
      summary: Remover aluno
      description: Remove o aluno com base no ID fornecido.
      operationId: deleteAluno
      parameters:
        - name: id
          in: path
          required: true
          description: ID do aluno a ser removido.
          schema:
            type: integer
      responses:
        '200':
          description: Aluno removido com sucesso.
        '404':
          description: Aluno não encontrado.

  /produtos:
    get:
      summary: Listar todos os produtos
      description: Retorna a lista de produtos cadastrados.
      operationId: listProdutos
      parameters:
        - name: name
          in: query
          description: Nome do produto.
          schema:
            type: string
        - name: category
          in: query
          description: Categoria do produto.
          schema:
            type: string
      responses:
        '200':
          description: Lista de produtos retornada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Produto'
    post:
      summary: Criar novo produto
      description: Cria um novo produto.
      operationId: createProduto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoCreate'
      responses:
        '201':
          description: Produto criado com sucesso.

  /produtos/{id}:
    get:
      summary: Buscar produto por ID
      description: Retorna informações de um produto específico.
      operationId: getProdutoById
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto.
          schema:
            type: integer
      responses:
        '200':
          description: Produto encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        '404':
          description: Produto não encontrado.
    put:
      summary: Atualizar produto
      description: Atualiza informações de um produto específico.
      operationId: updateProduto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto.
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoCreate'
      responses:
        '200':
          description: Produto atualizado.
    delete:
      summary: Remover produto
      description: Remove um produto.
      operationId: deleteProduto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto.
          schema:
            type: integer
      responses:
        '200':
          description: Produto removido com sucesso.

components:
  schemas:
    Aluno:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        idade:
          type: integer
    AlunoCreate:
      type: object
      required:
        - nome
        - idade
      properties:
        nome:
          type: string
        idade:
          type: integer
    Produto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          type: string
        brand:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
    ProdutoCreate:
      type: object
      required:
        - name
        - category
        - brand
        - price
        - quantity
      properties:
        name:
          type: string
        category:
          type: string
        brand:
          type: string
        price:
          type: number
        quantity:
          type: integer
